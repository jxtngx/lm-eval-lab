# Copyright Justin R. Goheen.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = [
    "setuptools",
    "wheel",
]

[project]
name = "lm_eval_lab"
dynamic = ["version"]
description = "Comprehensive Language Model Evaluations"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    { name = "Justin Goheen" },
]
requires-python = ">=3.9"
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "huggingface_hub",
    "transformers",
    "datasets",
    "langsmith",
    "langchain",
    "langchain-huggingface",
    "llama-index",
    "ragas",
    "lm-eval",
    "unstructured",
    "langchain-unstructured",
    "chromadb",
    "langchain-chroma",
    "streamlit",
    "typer",
    "python-dotenv",
    "omegaconf"
]

[project.optional-dependencies]
dev = [
    "ruff",
    "black",
    "pytest",
    "mypy",
    "bandit",
    "coverage",
    "pre-commit",
    "isort"
]
docs = [
    "mkdocstrings[python]"
]
packaging = [
    "setuptools",
    "build",
    "twine"
]

[project.urls]
Repository = "https://github.com/jxtngx/lm-eval-lab"

[project.scripts]
lm-evals = "lm_eval_lab.cli:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 120

[tool.flake8]
line-length = 120

[tool.isort]
known_first_party = [
    "lm_eval_lab"
]
profile = "black"
line_length = 120
force_sort_within_sections = "False"
order_by_type = "False"

[tool.ruff]
line-length = 120
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E", "W",  # see: https://pypi.org/project/pycodestyle
    "F",  # see: https://pypi.org/project/pyflakes
]
ignore = [
    "E731",  # Do not assign a lambda expression, use a def
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    "docs"
]
ignore-init-module-imports = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
files = ["lab"]
install_types = true
non_interactive = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
allow_redefinition = true
# disable this rule as the Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = "False"

[[tool.mypy.overrides]]
#module = []
ignore_errors = true

[tool.pytest.ini_options]
testpaths = "tests"
norecursedirs = [
    ".git",
    ".github",
    "*.egg-info"
]
aadopts = "--disable-pytest-warnings"

[tool.coverage.run]
disable_warnings = ["couldnt-parse"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = ["pragma: no cover"]